#include <OneWire.h>
#include <DallasTemperature.h>
#include <WiFi.h>
#include <BlynkSimpleEsp32.h>

// Blynk template configuration
#define BLYNK_TEMPLATE_ID "TMPL6EEVoRLDG"
#define BLYNK_TEMPLATE_NAME "IOT"
#define BLYNK_AUTH_TOKEN "VEsmdRz7fYEt3GBYt7T77UM1FyOSQAZ1"

// Replace with your network credentials
const char* ssid = "PamuHasa";
const char* password = "Pamuhasa@2023";

// Blynk authentication token
const char* auth = "VEsmdRz7fYEt3GBYt7T77UM1FyOSQAZ1";

// GPIO where the DS18B20 is connected to
const int oneWireBus = 4;

// Setup a oneWire instance to communicate with any OneWire devices
OneWire oneWire(oneWireBus);

// Pass our oneWire reference to Dallas Temperature sensor
DallasTemperature sensors(&oneWire);

// Pin configuration for ultrasonic sensor
const int trigPin = 16;
const int echoPin = 17;

long duration;
int distance;

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Connect to Blynk
  Blynk.begin(auth, ssid, password);
  Serial.println("Connected to Blynk");

  // Start the DS18B20 sensor
  sensors.begin();

  // Set up the ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  Blynk.run();

  // Temperature measurement
  sensors.requestTemperatures();
  float temperatureC = sensors.getTempCByIndex(0);
  float temperatureF = sensors.getTempFByIndex(0);

  // Print temperature readings
  Serial.print("Temperature: ");
  Serial.print(temperatureC);
  Serial.print("°C\t");
  Serial.print(temperatureF);
  Serial.println("°F");

  // Ultrasonic distance measurement
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;

  // Print distance reading
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Update Blynk virtual pins
  Blynk.virtualWrite(V1, temperatureC);
  Blynk.virtualWrite(V2, distance);

  delay(5000); // Delay between measurements
}

